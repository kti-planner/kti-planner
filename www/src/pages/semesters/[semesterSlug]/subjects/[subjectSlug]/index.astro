---
import { Classroom, makeClassroomData } from '@backend/classroom';
import { Exercise, makeExerciseData } from '@backend/exercise';
import { LaboratoryGroup, makeLaboratoryGroupData } from '@backend/laboratory-group';
import { makeScheduleChangeData, makeSemesterData, Semester } from '@backend/semester';
import { makeSubjectData, Subject } from '@backend/subject';
import { makeUserPublicData, User } from '@backend/user';
import Layout from '@layouts/Layout.astro';
import SubjectApp from '@components/subjects/SubjectApp.vue';

const { semesterSlug, subjectSlug } = Astro.params;
const { langId } = Astro.locals;

const translations = {
    'en': {
        'Semesters': 'Semesters',
        'Winter semester': 'Winter semester',
        'Summer semester': 'Summer semester',
    },
    'pl': {
        'Semesters': 'Semestry',
        'Winter semester': 'Semestr zimowy',
        'Summer semester': 'Semestr letni',
    },
};

function translate(text: keyof (typeof translations)[LangId]): string {
    return translations[langId][text];
}

if (semesterSlug === undefined || subjectSlug === undefined) {
    return new Response(null, { status: 404 });
}

const semester = await Semester.fetchBySlug(semesterSlug);
if (!semester) {
    return new Response(null, { status: 404 });
}

const semesterData = makeSemesterData(semester);
const semesterName = `${semester.type === 'summer' ? translate('Summer semester') : translate('Winter semester')} ${semester.year}/${semester.year + 1}`;

const subject = await Subject.fetchBySlug(semester, subjectSlug);
if (!subject) {
    return new Response(null, { status: 404 });
}

const subjectData = makeSubjectData(subject, await subject.getTeachers());

const scheduleChanges = await semester.getScheduleChanges();
const scheduleChangesData = scheduleChanges.map(makeScheduleChangeData);

const allUsers = await User.fetchAll();
const allUsersData = allUsers.map(makeUserPublicData);

const classrooms = await Classroom.fetchAll();
const classroomsData = classrooms.map(makeClassroomData);

const exercises = await Exercise.fetchAllFromSubject(subject);

const exercisesData = exercises.map(exercise => {
    const teacher = allUsers.find(user => user.id === exercise.teacherId);
    if (teacher === undefined) {
        throw new Error('Exercise teacher not found');
    }

    const classroom = classrooms.find(classroom => classroom.id === exercise.classroomId);
    if (classroom === undefined) {
        throw new Error('Exercise classroom not found');
    }

    return makeExerciseData(exercise, classroom, teacher);
});

const nextExerciseNumber = exercises.reduce((max, e) => Math.max(max, e.exerciseNumber), 0) + 1;

const groups = await LaboratoryGroup.fetchAllFromSubject(subject);
const groupData = groups.map(makeLaboratoryGroupData);
---

<Layout
    breadcrumbs={[
        {
            text: translate('Semesters'),
            href: '/semesters/',
        },
        {
            text: semesterName,
            href: `/semesters/${semesterSlug}/`,
        },
        {
            text: subject.name,
            href: '#',
        },
    ]}
>
    <SubjectApp
        client:only="vue"
        subject={subjectData}
        semester={semesterData}
        allUsers={allUsersData}
        exercises={exercisesData}
        classrooms={classroomsData}
        laboratoryGroups={groupData}
        nextExerciseNumber={nextExerciseNumber}
        scheduleChanges={scheduleChangesData}
    />
</Layout>
