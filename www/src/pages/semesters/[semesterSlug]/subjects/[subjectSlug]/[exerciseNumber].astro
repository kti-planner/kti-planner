---
import { Classroom, makeClassroomData } from '@backend/classroom';
import { Exercise } from '@backend/exercise';
import { makeSemesterData, Semester } from '@backend/semester';
import { Subject } from '@backend/subject';
import { makeUserData } from '@backend/user';
import type { ClassroomData } from '@components/classrooms/types';
import type { ExerciseData } from '@components/exercises/types';
import type { SubjectData } from '@components/subjects/types';
import Layout from '@layouts/Layout.astro';
import EditExercise from '@components/exercises/EditExercise.vue';

const { semesterSlug, subjectSlug, exerciseNumber } = Astro.params;
const { langId, user } = Astro.locals;

const translations = {
    'en': {
        'Semesters': 'Semesters',
        'Winter semester': 'Winter semester',
        'Summer semester': 'Summer semester',
    },
    'pl': {
        'Semesters': 'Semestry',
        'Winter semester': 'Semestr zimowy',
        'Summer semester': 'Semestr letni',
    },
};

function translate(text: keyof (typeof translations)[LangId]): string {
    return translations[langId][text];
}

if (semesterSlug === undefined || subjectSlug === undefined || exerciseNumber === undefined) {
    return new Response(null, { status: 404 });
}

const semester = await Semester.fetchBySlug(semesterSlug);
if (!semester) {
    return new Response(null, { status: 404 });
}

const semesterName = `${semester.type === 'summer' ? translate('Summer semester') : translate('Winter semester')} ${semester.year}/${semester.year + 1}`;
const semesterData = makeSemesterData(semester);

const subject = await Subject.fetchBySlug(semester, subjectSlug);
if (!subject) {
    return new Response(null, { status: 404 });
}

const exerciseNumberParsed = parseInt(exerciseNumber, 10);
if (Number.isNaN(exerciseNumberParsed)) {
    return new Response(null, { status: 404 });
}

const exercise = await Exercise.fetchByNumber(subject, exerciseNumberParsed);
if (!exercise) {
    return new Response(null, { status: 404 });
}

const classrooms = await Classroom.fetchAll();
const classroomsData: ClassroomData[] = classrooms.map(makeClassroomData);

const subjectData: SubjectData = {
    id: subject.id,
    name: subject.name,
    semesterId: subject.semesterId,
    slug: subject.slug,
    teachers: (await subject.getTeachers()).map(makeUserData),
};

const classroomData = classroomsData.find(classroom => classroom.id === exercise.classroomId);
if (!classroomData) {
    throw new Error('Exercise classroom not found');
}

const exerciseData: ExerciseData = {
    id: exercise.id,
    name: exercise.name,
    exerciseNumber: exercise.exerciseNumber,
    subjectId: exercise.subjectId,
    classroom: classroomData,
    teacher: makeUserData(await exercise.getTeacher()),
};
---

<Layout
    breadcrumbs={[
        {
            text: translate('Semesters'),
            href: '/semesters/',
        },
        {
            text: semesterName,
            href: `/semesters/${semesterSlug}/`,
        },
        {
            text: subject.name,
            href: `/semesters/${semesterSlug}/subjects/${subjectSlug}/`,
        },
        {
            text: exercise.name,
            href: '#',
        },
    ]}
>
    <h1 class="text-center fs-4">
        {exercise.exerciseNumber}. {exercise.name}
        {
            user && (
                <EditExercise
                    client:only="vue"
                    semester={semesterData}
                    subject={subjectData}
                    exercise={exerciseData}
                    classrooms={classroomsData}
                />
            )
        }
    </h1>
</Layout>
