---
import { Classroom, makeClassroomData } from '@backend/classroom';
import { Exercise, makeExerciseData } from '@backend/exercise';
import { makeScheduleChangeData, makeSemesterData, Semester } from '@backend/semester';
import { makeSubjectData, Subject } from '@backend/subject';
import { makeUserPublicData } from '@backend/user';
import Layout from '@layouts/Layout.astro';
import EditExercise from '@components/exercises/EditExercise.vue';
import ExerciseCalendar from '@components/exercises/ExerciseCalendar.vue';
import Show from '@components/Show.astro';

const { semesterSlug, subjectSlug, exerciseNumber } = Astro.params;
const { langId, user } = Astro.locals;

const translations = {
    'en': {
        'Semesters': 'Semesters',
        'Winter semester': 'Winter semester',
        'Summer semester': 'Summer semester',
    },
    'pl': {
        'Semesters': 'Semestry',
        'Winter semester': 'Semestr zimowy',
        'Summer semester': 'Semestr letni',
    },
};

function translate(text: keyof (typeof translations)[LangId]): string {
    return translations[langId][text];
}

if (semesterSlug === undefined || subjectSlug === undefined || exerciseNumber === undefined) {
    return new Response(null, { status: 404 });
}

const semester = await Semester.fetchBySlug(semesterSlug);
if (!semester) {
    return new Response(null, { status: 404 });
}

const semesterData = makeSemesterData(semester);
const semesterName = `${semester.type === 'summer' ? translate('Summer semester') : translate('Winter semester')} ${semester.year}/${semester.year + 1}`;

const subject = await Subject.fetchBySlug(semester, subjectSlug);
if (!subject) {
    return new Response(null, { status: 404 });
}

const subjectData = makeSubjectData(subject, await subject.getTeachers());

const exerciseNumberParsed = parseInt(exerciseNumber, 10);
if (Number.isNaN(exerciseNumberParsed)) {
    return new Response(null, { status: 404 });
}

const exercise = await Exercise.fetchByNumber(subject, exerciseNumberParsed);
if (!exercise) {
    return new Response(null, { status: 404 });
}

const classrooms = await Classroom.fetchAll();
const classroomsData = classrooms.map(makeClassroomData);
const classroom = classrooms.find(classroom => classroom.id === exercise.classroomId) ?? null;

const exerciseData = makeExerciseData(exercise, classroom, await exercise.getTeacher());

const teachers = await subject.getTeachers();
const teachersData = teachers.map(makeUserPublicData);

const scheduleChanges = await semester.getScheduleChanges();
const scheduleChangesData = scheduleChanges.map(makeScheduleChangeData);
---

<Layout
    breadcrumbs={[
        {
            text: translate('Semesters'),
            href: '/semesters/',
        },
        {
            text: semesterName,
            href: `/semesters/${semesterSlug}/`,
        },
        {
            text: subject.name,
            href: `/semesters/${semesterSlug}/subjects/${subjectSlug}/`,
        },
        {
            text: exercise.name,
            href: '#',
        },
    ]}
>
    <h1 class="text-center fs-4">
        {exercise.exerciseNumber}. {exercise.name}
        <Show when={user !== null}>
            <EditExercise
                client:only="vue"
                semester={semesterData}
                subject={subjectData}
                exercise={exerciseData}
                classrooms={classroomsData}
            />
        </Show>
    </h1>

    <div class="mt-4">
        <ExerciseCalendar
            client:only="vue"
            exercise={exerciseData}
            semester={semesterData}
            subject={subjectData}
            teachers={teachersData}
            scheduleChanges={scheduleChangesData}
        />
    </div>
</Layout>
